# List comprehensions
# Что будет, если генераторное выражение записать не в круглых скобках, а в
# квадратных? Получим list comprehensions. Другие названия: list comp, генератор
# списков, списковое включение. И нет, это не генераторное выражение. Генератор
# списков полностью формирует список с элементами до его присваивания
# переменной слева от знака равно.

my_listcomp = [chr(i) for i in range(97, 123)]
print(my_listcomp) # ['a', 'b', 'c', 'd', ..., z]
for char in my_listcomp:
    print(char)



data = [2, 5, 1, 42, 65, 76, 24, 77]
res = []
for item in data:
    if item % 2 == 0:
        res.append(item)
print(f'{res = }')

# Аналогичное решение, но с использованием синтаксического сахара listcomp:

data = [2, 5, 1, 42, 65, 76, 24, 77]
res = [item for item in data if item % 2 == 0]
print(f'{res = }')

# 1. Не создаём пустой список в начале.
# 2. Не пишем двоеточия после цикла и логической проверки.
# 3. Исключаем метод append.
# Итого вместо 4 строк кода получаем одну.