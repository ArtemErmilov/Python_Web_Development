# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ1
# üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å-—Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä—ã–π —Å—á–∏—Ç–∞–µ—Ç —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ –ø—Ä–∏
# –≤—ã–∑–æ–≤–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# üìå –≠–∫–∑–µ–º–ø–ª—è—Ä –¥–æ–ª–∂–µ–Ω –∑–∞–ø–æ–º–∏–Ω–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ k –∑–Ω–∞—á–µ–Ω–∏–π.
# üìå –ü–∞—Ä–∞–º–µ—Ç—Ä k –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞.
# üìå –î–æ–±–∞–≤—å—Ç–µ –º–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞–Ω–µ–µ –≤—ã–∑—ã–≤–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏
# –∏—Ö —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª–æ–≤.

from collections import defaultdict


class MyFactorial:

    def __new__(cls, k:str = None ):
        instance = super().__new__(cls)
        if(k<1 or k == None):
             raise ValueError ('–ó–Ω–∞—á–µ–Ω–∏–µ K –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0.')
        else:
            instance.k = k
        instance.storage = defaultdict(list)
        return instance

       
    def __str__ (self):
        txt = '\n'.join((f'{k}: {v}' for k, v in self.storage.items()))
        return txt


    def __call__(self, value):  
        number = 1
        list_num = []
        for num in range(1,value + 1):
            number *=num
            if (num - (value - self.k)-1) >= 0:
                list_num.append(number)
            self.storage[value] = list_num
        return f'{value} : {list_num}'

class NewFactorial:

    def __new__(cls, k:str = None ):
        instance = super().__new__(cls)
        if(k<1 or k == None):
             raise ValueError ('–ó–Ω–∞—á–µ–Ω–∏–µ K –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 0.')
        else:
            instance.k = k
        instance.storage = {}
        return instance

    def _factorial(self, value):
        number = 1
        list_num = []
        for num in range(1,value + 1):
            number *=num
            list_num.append(number)
        return list_num
       
    def __str__ (self):
        txt = '\n'.join((f'{k}: {v}' for k, v in self.storage.items()))
        return txt


    def __call__(self, value):  
        self.storage[value] = self._factorial(value)[-self.k:]
        return self.storage



f1 = NewFactorial(3)

print (f1(5))
f1(6)
f1(7)
print(f1)
    