# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ3
# üìå –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å-–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä.
# üìå –≠–∫–∑–µ–º–ø–ª—è—Ä –∫–ª–∞—Å—Å–∞ –¥–æ–ª–∂–µ–Ω –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–∫—Ç–æ—Ä–∏–∞–ª —á–∏—Å–ª–∞ –≤
# –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç start –¥–æ stop —Å —à–∞–≥–æ–º step.
# üìå –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω—ã –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, —Å—á–∏—Ç–∞–µ–º step=1.
# üìå –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä, —Ç–∞–∫–∂–µ —Å—á–∏—Ç–∞–µ–º start=1.

class Factorial:

    def __new__(cls, stop:int, start:int = 1, step:int = 1):
        instance = super().__new__(cls)
        instance.stop = stop
        instance.start = start
        instance.step = step
        instance.number = instance.factorial(start)
        return  instance
    
    def factorial(self, number:int):
        temp_num = 1
        for num in range(1,number):
            temp_num *= num
        return temp_num

    
    def __iter__(self):
        return self
    
    def __next__ (self):
        while self.start <= self.stop:
            for num in range(self.start,self.start+self.step):
                self.number *=num
                self.start += 1
                if (self.start > self.stop):
                    return self.number                
            return self.number
        raise StopIteration

i = Factorial(10,1,3)

for num in i:
    print(num)