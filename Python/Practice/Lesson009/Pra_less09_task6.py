# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ6
# üìå –î–æ—Ä–∞–±–æ—Ç–∞–π—Ç–µ –ø—Ä–æ—à–ª—É—é –∑–∞–¥–∞—á—É –¥–æ–±–∞–≤–∏–≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä wraps –≤
# –∫–∞–∂–¥—ã–π –∏–∑ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤.


# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ5
# üìå –û–±—ä–µ–¥–∏–Ω–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –ø—Ä–æ—à–ª—ã—Ö –∑–∞–¥–∞—á.
# üìå –§—É–Ω–∫—Ü–∏—é —É–≥–∞–¥–∞–π–∫—É –∑–∞–¥–µ–∫–æ—Ä–∏—Ä—É–π—Ç–µ:
# ‚óã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤,
# ‚óã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º –∫–æ–Ω—Ç—Ä–æ–ª—è –∑–Ω–∞—á–µ–Ω–∏–π –∏
# ‚óã –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞.
# üìå –í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–≤.

from Pra_less09_task3 import main as js_dec # –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤

from Pra_less09_task2 import main as param_control_decor # –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º –∫–æ–Ω—Ç—Ä–æ–ª—è –∑–Ω–∞—á–µ–Ω–∏–π

from Pra_less09_task4 import count #–¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–æ–º –¥–ª—è –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞



@js_dec
@count(2)
@param_control_decor
def guessing_numbers(number:int, repet:int):
    i = repet
    while repet:
            num_in = int(input ('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100: '))
            if (num_in > number):
                print(f'–í—ã –≤–≤–µ–ª–∏ —á–∏—Å–ª–æ –ë–û–õ–¨–®–ï –∑–∞–≥–∞–¥–æ—á–Ω–æ–≥–æ. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {repet-1} –ø–æ–ø—ã—Ç–æ–∫.')
                
            elif (num_in < number):
                print(f'–í—ã –≤–≤–µ–ª–∏ —á–∏—Å–ª–æ –ú–ï–ù–¨–®–ï –∑–∞–≥–∞–¥–æ—á–Ω–æ–≥–æ. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {repet-1} –ø–æ–ø—ã—Ç–æ–∫.')
                
            else:
                print(f'–í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ —Å {repet-1} –ø–æ–ø—ã—Ç–∫–∏!!!')
                return True
            repet -=1
    
    print(f'–í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ!!! –ó–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ {number}')
    return False
    

guessing_numbers(150,21)