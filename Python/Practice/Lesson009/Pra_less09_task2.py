# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ2

# üìå –î–æ—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–¥–∞—á—É 1.
# üìå –ü—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é –≤ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä.
# üìå –û–Ω –¥–æ–ª–∂–µ–Ω –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≤—Ö–æ–¥—è—Ç –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –≤ —Ñ—É–Ω–∫—Ü–∏—é-
# —É–≥–∞–¥–∞–π–∫—É —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω—ã [1, 100] –∏ [1, 10].
# üìå –ï—Å–ª–∏ –Ω–µ –≤—Ö–æ–¥—è—Ç, –≤—ã–∑—ã–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏
# –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–≤.

from typing import Callable
import random
from functools import wraps

def main (func:Callable):
    @wraps(func)    
    def repetitions_num(number,repet):
        
        if ( number not in range(1,101)):
            print (f'–í–≤–µ–¥—ë–Ω–æ —á–∏—Å–ª–æ {number} –Ω–µ –ª–µ–∂–∏—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 100')
            number = random.randint(1,101)
        if ( repet not in range(1,11)):
            print (f'–í–≤–µ–¥—ë–Ω–æ —á–∏—Å–ª–æ {repet} –Ω–µ –ª–µ–∂–∏—Ç –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 10')
            repet = random.randint(1,11)
        return func(number,repet)
       
    return repetitions_num

@main
def guessing_numbers(number:int, repet:int):
    i = repet
    while repet:
            num_in = int(input ('–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100: '))
            if (num_in > number):
                print(f'–í—ã –≤–≤–µ–ª–∏ —á–∏—Å–ª–æ –ë–û–õ–¨–®–ï –∑–∞–≥–∞–¥–æ—á–Ω–æ–≥–æ. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {repet-1} –ø–æ–ø—ã—Ç–æ–∫.')
                
            elif (num_in < number):
                print(f'–í—ã –≤–≤–µ–ª–∏ —á–∏—Å–ª–æ –ú–ï–ù–¨–®–ï –∑–∞–≥–∞–¥–æ—á–Ω–æ–≥–æ. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {repet-1} –ø–æ–ø—ã—Ç–æ–∫.')
                
            else:
                print(f'–í—ã —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ —Å {repet-1} –ø–æ–ø—ã—Ç–∫–∏!!!')
                break
            repet -=1
    else:
        print(f'–í—ã –Ω–µ —É–≥–∞–¥–∞–ª–∏ —á–∏—Å–ª–æ!!! –ó–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ {number}')
    return number, repet


